<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <RootNamespace>ChatSrv</RootNamespace>
        <ServerGarbageCollection>true</ServerGarbageCollection>
        <RunAnalyzersDuringLiveAnalysis>True</RunAnalyzersDuringLiveAnalysis>
        <RunAnalyzersDuringBuild>True</RunAnalyzersDuringBuild>
		<!--<AllowUnsafeBlocks>True</AllowUnsafeBlocks>-->
		<OutputType>Exe</OutputType>
		<!--1、-windows+UseWindowsForms-PublishTrimmed(目前不支持winform)一起用不生成runtime后置目录（强制单平台环境）-->
		<TargetFramework>net9.0-windows</TargetFramework>
		<!---2、不生成framework+runtime前置目录-->
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
		<!---3、不生成pdb文件-->
		<DebugType>embedded</DebugType>
		<!---4、引用Costura.Fody打包dll-->
		<!--AOT与单文件只能二选一-->
		<PublishAot>True</PublishAot>
		<PublishTrimmed>True</PublishTrimmed>
    </PropertyGroup>
    
    <Choose>
        <When Condition="$(Configuration)=='Debug' and '$(Mode)' == 'Dev'">

        </When>
        
        <When Condition="$(Configuration)=='Release'">
            <PropertyGroup>
                <DebugSymbols>false</DebugSymbols>
                <Optimize>true</Optimize>
                <DefineConstants>TRACE</DefineConstants>
            </PropertyGroup>
        </When>
    
        <When Condition="$(Configuration)=='Debug'">
            <Choose>
                <When Condition="$([MSBuild]::IsOSPlatform('Windows'))">
                    <PropertyGroup>
                        <OutputPath>..\Build\MirServer\ChatSrv</OutputPath>
                    </PropertyGroup>
                </When>
                <When Condition="$([MSBuild]::IsOSPlatform('OSX'))">
                    <PropertyGroup>
                        <OutputPath>/Volumes/Data/Mirserver/ChatSrv</OutputPath>
                    </PropertyGroup>
                </When>
                <When Condition="$([MSBuild]::IsOSPlatform('Linux'))">
                    <PropertyGroup>
                        <OutputPath>/Volumes/opt/Mirserver/ChatSrv</OutputPath>
                    </PropertyGroup>
                </When>
            </Choose>
        </When>
    </Choose>
    
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    
    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
        <PackageReference Include="Microsoft.Extensions.Hosting" Version="8.0.0" />
        <PackageReference Include="Spectre.Console" Version="0.48.1-preview.0.20" />
        <PackageReference Include="System.Text.Encoding.CodePages" Version="8.0.0" />
        <PackageReference Include="NLog" Version="5.2.8" />
        <PackageReference Include="NLog.Extensions.Logging" Version="5.3.8" />
        <PackageReference Include="MQTTnet" Version="4.3.3.952" />
    </ItemGroup>
    
    <ItemGroup>
        <Compile Remove="Services\CloudClient.cs" />
    </ItemGroup>
    
    <ItemGroup>
      <ProjectReference Include="..\OpenMir2\OpenMir2.csproj" />
    </ItemGroup>

</Project>